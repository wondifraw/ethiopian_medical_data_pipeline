name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: supersecretpassword
          POSTGRES_DB: ethiopian_medical_data
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: supersecretpassword
      POSTGRES_DB: ethiopian_medical_data
      POSTGRES_HOST: localhost
      PYTHONPATH: .
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev gcc libgl1

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Run tests (if any)
        run: |
          if [ -d tests ]; then pytest tests; else echo "No tests directory"; fi

      - name: Check dbt project
        run: |
          if [ -d dbt_project ]; then cd dbt_project && dbt deps && dbt compile; else echo "No dbt_project directory"; fi

      - name: Build Docker image
        run: |
          docker build -f docker/Dockerfile -t ethiopian-medical-data-pipeline . 
          # Run dbt tests to validate data models
          - name: Run dbt tests
            run: |
              if [ -d dbt_project ]; then cd dbt_project && dbt test; else echo "No dbt_project directory"; fi